/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/courses': {
    /** Returns a list of courses */
    get: operations['getCourses']
  }
  '/courses/{id}': {
    /** Returns a specific course */
    get: operations['getCourse']
  }
  '/courses/{id}/district': {
    /** Returns the district for a course */
    get: operations['getDistrictForCourse']
  }
  '/courses/{id}/resources': {
    /** Returns the resources for a course */
    get: operations['getResourcesForCourse']
  }
  '/courses/{id}/schools': {
    /** Returns the schools for a course */
    get: operations['getSchoolsForCourse']
  }
  '/courses/{id}/sections': {
    /** Returns the sections for a course */
    get: operations['getSectionsForCourse']
  }
  '/districts': {
    /** Returns a list of districts. In practice this will only return the one district associated with the bearer token */
    get: operations['getDistricts']
  }
  '/districts/{id}': {
    /** Returns a specific district */
    get: operations['getDistrict']
  }
  '/resources': {
    /** Returns a list of resources */
    get: operations['getResources']
  }
  '/resources/{id}': {
    /** Returns a specific resource */
    get: operations['getResource']
  }
  '/resources/{id}/courses': {
    /** Returns the courses for a resource */
    get: operations['getCoursesForResource']
  }
  '/resources/{id}/sections': {
    /** Returns the sections for a resource */
    get: operations['getSectionsForResource']
  }
  '/resources/{id}/users': {
    /** Returns the student and/or teacher users for a resource */
    get: operations['getUsersForResource']
  }
  '/schools': {
    /** Returns a list of schools */
    get: operations['getSchools']
  }
  '/schools/{id}': {
    /** Returns a specific school */
    get: operations['getSchool']
  }
  '/schools/{id}/courses': {
    /** Returns the courses for a school */
    get: operations['getCoursesForSchool']
  }
  '/schools/{id}/district': {
    /** Returns the district for a school */
    get: operations['getDistrictForSchool']
  }
  '/schools/{id}/sections': {
    /** Returns the sections for a school */
    get: operations['getSectionsForSchool']
  }
  '/schools/{id}/terms': {
    /** Returns the terms for a school */
    get: operations['getTermsForSchool']
  }
  '/schools/{id}/users': {
    /** Returns the staff, student, and/or teacher users for a school */
    get: operations['getUsersForSchool']
  }
  '/sections': {
    /** Returns a list of sections */
    get: operations['getSections']
  }
  '/sections/{id}': {
    /** Returns a specific section */
    get: operations['getSection']
  }
  '/sections/{id}/course': {
    /** Returns the course for a section */
    get: operations['getCourseForSection']
  }
  '/sections/{id}/district': {
    /** Returns the district for a section */
    get: operations['getDistrictForSection']
  }
  '/sections/{id}/resources': {
    /** Returns the resources for a section */
    get: operations['getResourcesForSection']
  }
  '/sections/{id}/school': {
    /** Returns the school for a section */
    get: operations['getSchoolForSection']
  }
  '/sections/{id}/term': {
    /** Returns the term for a section */
    get: operations['getTermForSection']
  }
  '/sections/{id}/users': {
    /** Returns the student and/or teacher users for a section */
    get: operations['getUsersForSection']
  }
  '/terms': {
    /** Returns a list of terms */
    get: operations['getTerms']
  }
  '/terms/{id}': {
    /** Returns a specific term */
    get: operations['getTerm']
  }
  '/terms/{id}/district': {
    /** Returns the district for a term */
    get: operations['getDistrictForTerm']
  }
  '/terms/{id}/sections': {
    /** Returns the sections for a term */
    get: operations['getSectionsForTerm']
  }
  '/terms/{id}/schools': {
    /** Returns the schools for a term */
    get: operations['getSchoolsForTerm']
  }
  '/users': {
    /** Returns a list of contact, district admin, staff, student, and/or teacher users */
    get: operations['getUsers']
  }
  '/users/{id}': {
    /** Returns a specific user */
    get: operations['getUser']
  }
  '/users/{id}/district': {
    /** Returns the district for a user */
    get: operations['getDistrictForUser']
  }
  '/users/{id}/mycontacts': {
    /** Returns the contact users for a student user */
    get: operations['getContactsForUser']
  }
  '/users/{id}/mystudents': {
    /** Returns the student users for a teacher or contact user */
    get: operations['getStudentsForUser']
  }
  '/users/{id}/myteachers': {
    /** Returns the teacher users for a student user */
    get: operations['getTeachersForUser']
  }
  '/users/{id}/resources': {
    /** Returns the resources for a user */
    get: operations['getResourcesForUser']
  }
  '/users/{id}/schools': {
    /** Returns the schools for a user */
    get: operations['getSchoolsForUser']
  }
  '/users/{id}/sections': {
    /** Returns the sections for a user */
    get: operations['getSectionsForUser']
  }
  '/events': {
    /** Returns a list of events */
    get: operations['getEvents']
  }
  '/events/{id}': {
    /** Returns the specific event */
    get: operations['getEvent']
  }
}

export interface definitions {
  BadRequest: {
    message?: string
  }
  InternalError: {
    message?: string
  }
  Link: {
    /** @enum {string} */
    rel?: 'next' | 'prev' | 'self'
    uri?: string
  }
  NotFound: {
    message?: string
  }
  CoursesResponse: {
    data?: definitions['CourseResponse'][]
    links?: definitions['Link'][]
  }
  CourseResponse: {
    data?: definitions['Course']
  }
  DistrictsResponse: {
    data?: definitions['DistrictResponse'][]
    links?: definitions['Link'][]
  }
  DistrictResponse: {
    data?: definitions['District']
  }
  ResourcesResponse: {
    data?: definitions['ResourceResponse'][]
    links?: definitions['Link'][]
  }
  ResourceResponse: {
    data?: definitions['Resource']
  }
  SectionsResponse: {
    data?: definitions['SectionResponse'][]
    links?: definitions['Link'][]
  }
  SectionResponse: {
    data?: definitions['Section']
  }
  SchoolsResponse: {
    data?: definitions['SchoolResponse'][]
    links?: definitions['Link'][]
  }
  SchoolResponse: {
    data?: definitions['School']
  }
  TermsResponse: {
    data?: definitions['TermResponse'][]
    links?: definitions['Link'][]
  }
  TermResponse: {
    data?: definitions['Term']
  }
  UsersResponse: {
    data?: definitions['UserResponse'][]
    links?: definitions['Link'][]
  }
  UserResponse: {
    data?: definitions['User']
  }
  Course: {
    id?: string
    name?: string
    number?: string
    district?: string
  }
  Credentials: {
    district_username?: string
  }
  District: {
    id?: string
    name?: string
    mdr_number?: string
    nces_id?: string
    sis_type?: string
    /** @enum {string} */
    state?: 'running' | 'pending' | 'error' | 'paused' | '' | 'success'
    /** Format: datetime */
    last_sync?: string
    error?: string
    /** Format: datetime */
    pause_start?: string
    /** Format: datetime */
    pause_end?: string
    /** Format: date */
    launch_date?: string
    portal_url?: string
    login_methods?: string[]
    district_contact?: definitions['DistrictContact']
  }
  Location: {
    address?: string
    city?: string
    state?: string
    zip?: string
    lat?: string
    lon?: string
  }
  Name: {
    first?: string
    middle?: string
    last?: string
  }
  Principal: {
    name?: string
    email?: string
  }
  Resource: {
    /** Format: date-time */
    created?: string
    district?: string
    roles?: ('teacher' | 'student')[]
    id?: string
    title?: string
    /** Format: date-time */
    updated?: string
    resource_id?: string
  }
  Roles: {
    contact?: definitions['Contact']
    district_admin?: definitions['DistrictAdmin']
    staff?: definitions['Staff']
    student?: definitions['Student']
    teacher?: definitions['Teacher']
  }
  School: {
    id?: string
    /** Format: datetime */
    created?: string
    district?: string
    /** @enum {string} */
    high_grade?:
      | 'InfantToddler'
      | 'Preschool'
      | 'PreKindergarten'
      | 'TransitionalKindergarten'
      | 'Kindergarten'
      | '1'
      | '2'
      | '3'
      | '4'
      | '5'
      | '6'
      | '7'
      | '8'
      | '9'
      | '10'
      | '11'
      | '12'
      | '13'
      | 'PostGraduate'
      | 'Ungraded'
      | 'Other'
      | ''
    /** Format: datetime */
    last_modified?: string
    location?: definitions['Location']
    /** @enum {string} */
    low_grade?:
      | 'InfantToddler'
      | 'Preschool'
      | 'PreKindergarten'
      | 'TransitionalKindergarten'
      | 'Kindergarten'
      | '1'
      | '2'
      | '3'
      | '4'
      | '5'
      | '6'
      | '7'
      | '8'
      | '9'
      | '10'
      | '11'
      | '12'
      | '13'
      | 'PostGraduate'
      | 'Ungraded'
      | 'Other'
      | ''
    name?: string
    nces_id?: string
    phone?: string
    principal?: definitions['Principal']
    school_number?: string
    sis_id?: string
    state_id?: string
    mdr_number?: string
    ext?: { [key: string]: unknown }
  }
  SchoolEnrollment: {
    school?: string
    /** Format: datetime */
    start_date?: string
    /** Format: datetime */
    end_date?: string
  }
  Section: {
    id?: string
    course?: string
    /** Format: datetime */
    created?: string
    district?: string
    /** @enum {string} */
    grade?:
      | 'InfantToddler'
      | 'Preschool'
      | 'PreKindergarten'
      | 'TransitionalKindergarten'
      | 'Kindergarten'
      | '1'
      | '2'
      | '3'
      | '4'
      | '5'
      | '6'
      | '7'
      | '8'
      | '9'
      | '10'
      | '11'
      | '12'
      | '13'
      | 'PostGraduate'
      | 'Ungraded'
      | 'Other'
      | ''
    /** Format: datetime */
    last_modified?: string
    name?: string
    period?: string
    school?: string
    section_number?: string
    sis_id?: string
    students?: string[]
    /** @enum {string} */
    subject?:
      | 'english/language arts'
      | 'math'
      | 'science'
      | 'social studies'
      | 'language'
      | 'homeroom/advisory'
      | 'interventions/online learning'
      | 'technology and engineering'
      | 'PE and health'
      | 'arts and music'
      | 'other'
      | ''
    teacher?: string
    teachers?: string[]
    term_id?: string
    ext?: { [key: string]: unknown }
  }
  StudentRelationship: {
    student?: string
    /** @enum {string} */
    relationship?:
      | 'Parent'
      | 'Grandparent'
      | 'Self'
      | 'Aunt/Uncle'
      | 'Sibling'
      | 'Other'
      | ''
    /** @enum {string} */
    type?:
      | 'Parent/Guardian'
      | 'Emergency'
      | 'Primary'
      | 'Secondary'
      | 'Family'
      | 'Other'
      | ''
  }
  Term: {
    id?: string
    name?: string
    /** Format: datetime */
    start_date?: string
    /** Format: datetime */
    end_date?: string
    district?: string
  }
  Contact: {
    legacy_id?: string
    phone?: string
    /** @enum {string} */
    phone_type?: 'Cell' | 'Home' | 'Work' | 'Other' | ''
    sis_id?: string
    student_relationships?: definitions['StudentRelationship'][]
  }
  DistrictAdmin: {
    legacy_id?: string
    title?: string
  }
  Staff: {
    legacy_id?: string
    credentials?: definitions['Credentials']
    department?: string
    roles?: string[]
    schools?: string[]
    staff_id?: string
    title?: string
    ext?: { [key: string]: unknown }
  }
  Student: {
    legacy_id?: string
    /** Format: datetime */
    created?: string
    credentials?: definitions['Credentials']
    dob?: string
    /** @enum {string} */
    ell_status?: 'Y' | 'N' | ''
    enrollments?: definitions['SchoolEnrollment'][]
    /** @enum {string} */
    gender?: 'M' | 'F' | 'X' | ''
    graduation_year?: string
    /** @enum {string} */
    grade?:
      | 'InfantToddler'
      | 'Preschool'
      | 'PreKindergarten'
      | 'TransitionalKindergarten'
      | 'Kindergarten'
      | '1'
      | '2'
      | '3'
      | '4'
      | '5'
      | '6'
      | '7'
      | '8'
      | '9'
      | '10'
      | '11'
      | '12'
      | '13'
      | 'PostGraduate'
      | 'Ungraded'
      | 'Other'
      | ''
    /** @enum {string} */
    hispanic_ethnicity?: 'Y' | 'N' | ''
    /** @enum {string} */
    home_language?:
      | 'English'
      | 'Albanian'
      | 'Amharic'
      | 'Arabic'
      | 'Bengali'
      | 'Bosnian'
      | 'Burmese'
      | 'Cantonese'
      | 'Chinese'
      | 'Dutch'
      | 'Farsi'
      | 'French'
      | 'German'
      | 'Hebrew'
      | 'Hindi'
      | 'Hmong'
      | 'Ilocano'
      | 'Japanese'
      | 'Javanese'
      | 'Karen'
      | 'Khmer'
      | 'Korean'
      | 'Laotian'
      | 'Latvian'
      | 'Malay'
      | 'Mandarin'
      | 'Nepali'
      | 'Oromo'
      | 'Polish'
      | 'Portuguese'
      | 'Punjabi'
      | 'Romanian'
      | 'Russian'
      | 'Samoan'
      | 'Serbian'
      | 'Somali'
      | 'Spanish'
      | 'Swahili'
      | 'Tagalog'
      | 'Tamil'
      | 'Telugu'
      | 'Thai'
      | 'Tigrinya'
      | 'Turkish'
      | 'Ukrainian'
      | 'Urdu'
      | 'Vietnamese'
      | ''
    iep_status?: string
    /** Format: datetime */
    last_modified?: string
    location?: definitions['Location']
    /** @enum {string} */
    race?:
      | 'Caucasian'
      | 'Asian'
      | 'Black or African American'
      | 'American Indian'
      | 'Hawaiian or Other Pacific Islander'
      | 'Two or More Races'
      | 'Unknown'
      | ''
    school?: string
    schools?: string[]
    sis_id?: string
    state_id?: string
    student_number?: string
    unweighted_gpa?: string
    weighted_gpa?: string
    ext?: { [key: string]: unknown }
  }
  Teacher: {
    legacy_id?: string
    /** Format: datetime */
    created?: string
    credentials?: definitions['Credentials']
    district?: string
    /** Format: datetime */
    last_modified?: string
    name?: definitions['Name']
    school?: string
    schools?: string[]
    sis_id?: string
    state_id?: string
    teacher_number?: string
    title?: string
    ext?: { [key: string]: unknown }
  }
  User: {
    id?: string
    /** Format: datetime */
    created?: string
    district?: string
    email?: string
    /** Format: datetime */
    last_modified?: string
    name?: definitions['Name']
    roles?: definitions['Roles']
  }
  DistrictContact: {
    id?: string
    title?: string
    district?: string
    email?: string
    name?: definitions['Name']
  }
  CourseObject: {
    object?: definitions['Course']
  }
  DistrictObject: {
    object?: definitions['District']
  }
  ResourceObject: {
    object?: definitions['Resource']
  }
  SchoolObject: {
    object?: definitions['School']
  }
  SectionObject: {
    object?: definitions['Section']
  }
  TermObject: {
    object?: definitions['Term']
  }
  UserObject: {
    object?: definitions['User']
  }
  EventsResponse: {
    data?: definitions['EventResponse'][]
    links?: definitions['Link'][]
  }
  EventResponse: {
    data?: definitions['Event']
  }
  Event: {
    id?: string
    created?: string
  } & (
    | {
        type: 'courses.updated'
        data?: definitions['CourseObject']
        previous_attributes?: { [key: string]: { [key: string]: unknown } }
      }
    | { type: 'courses.created'; data?: definitions['CourseObject'] }
    | { type: 'courses.deleted'; data?: definitions['CourseObject'] }
    | {
        type: 'districts.updated'
        data?: definitions['DistrictObject']
        previous_attributes?: { [key: string]: { [key: string]: unknown } }
      }
    | { type: 'districts.created'; data?: definitions['DistrictObject'] }
    | { type: 'districts.deleted'; data?: definitions['DistrictObject'] }
    | {
        type: 'resources.updated'
        data?: definitions['ResourceObject']
        previous_attributes?: { [key: string]: { [key: string]: unknown } }
      }
    | { type: 'resources.created'; data?: definitions['ResourceObject'] }
    | { type: 'resources.deleted'; data?: definitions['ResourceObject'] }
    | {
        type: 'schools.updated'
        data?: definitions['SchoolObject']
        previous_attributes?: { [key: string]: { [key: string]: unknown } }
      }
    | { type: 'schools.created'; data?: definitions['SchoolObject'] }
    | { type: 'schools.deleted'; data?: definitions['SchoolObject'] }
    | {
        type: 'sections.updated'
        data?: definitions['SectionObject']
        previous_attributes?: { [key: string]: { [key: string]: unknown } }
      }
    | { type: 'sections.created'; data?: definitions['SectionObject'] }
    | { type: 'sections.deleted'; data?: definitions['SectionObject'] }
    | {
        type: 'terms.updated'
        data?: definitions['TermObject']
        previous_attributes?: { [key: string]: { [key: string]: unknown } }
      }
    | { type: 'terms.created'; data?: definitions['TermObject'] }
    | { type: 'terms.deleted'; data?: definitions['TermObject'] }
    | {
        type: 'users.updated'
        data?: definitions['UserObject']
        previous_attributes?: { [key: string]: { [key: string]: unknown } }
      }
    | { type: 'users.created'; data?: definitions['UserObject'] }
    | { type: 'users.deleted'; data?: definitions['UserObject'] }
  )

  'courses.updated': definitions['Event'] & {
    data?: definitions['CourseObject']
    previous_attributes?: { [key: string]: { [key: string]: unknown } }
  }
  'courses.created': definitions['Event'] & {
    data?: definitions['CourseObject']
  }
  'courses.deleted': definitions['Event'] & {
    data?: definitions['CourseObject']
  }
  'districts.updated': definitions['Event'] & {
    data?: definitions['DistrictObject']
    previous_attributes?: { [key: string]: { [key: string]: unknown } }
  }
  'districts.created': definitions['Event'] & {
    data?: definitions['DistrictObject']
  }
  'districts.deleted': definitions['Event'] & {
    data?: definitions['DistrictObject']
  }
  'resources.updated': definitions['Event'] & {
    data?: definitions['ResourceObject']
    previous_attributes?: { [key: string]: { [key: string]: unknown } }
  }
  'resources.created': definitions['Event'] & {
    data?: definitions['ResourceObject']
  }
  'resources.deleted': definitions['Event'] & {
    data?: definitions['ResourceObject']
  }
  'schools.updated': definitions['Event'] & {
    data?: definitions['SchoolObject']
    previous_attributes?: { [key: string]: { [key: string]: unknown } }
  }
  'schools.created': definitions['Event'] & {
    data?: definitions['SchoolObject']
  }
  'schools.deleted': definitions['Event'] & {
    data?: definitions['SchoolObject']
  }
  'sections.updated': definitions['Event'] & {
    data?: definitions['SectionObject']
    previous_attributes?: { [key: string]: { [key: string]: unknown } }
  }
  'sections.created': definitions['Event'] & {
    data?: definitions['SectionObject']
  }
  'sections.deleted': definitions['Event'] & {
    data?: definitions['SectionObject']
  }
  'terms.updated': definitions['Event'] & {
    data?: definitions['TermObject']
    previous_attributes?: { [key: string]: { [key: string]: unknown } }
  }
  'terms.created': definitions['Event'] & {
    data?: definitions['TermObject']
  }
  'terms.deleted': definitions['Event'] & {
    data?: definitions['TermObject']
  }
  'users.updated': definitions['Event'] & {
    data?: definitions['UserObject']
    previous_attributes?: { [key: string]: { [key: string]: unknown } }
  }
  'users.created': definitions['Event'] & {
    data?: definitions['UserObject']
  }
  'users.deleted': definitions['Event'] & {
    data?: definitions['UserObject']
  }
}

export interface responses {
  /** Bad Request */
  BadRequest: {
    schema: definitions['BadRequest']
  }
  /** Internal Error */
  InternalError: {
    schema: definitions['InternalError']
  }
  /** Entity Not Found */
  NotFound: {
    schema: definitions['NotFound']
  }
}

export interface operations {
  /** Returns a list of courses */
  getCourses: {
    parameters: {
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
        count?: '' | 'true' | 'false' | 'undefined'
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['CoursesResponse']
      }
    }
  }
  /** Returns a specific course */
  getCourse: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['CourseResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the district for a course */
  getDistrictForCourse: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['DistrictResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the resources for a course */
  getResourcesForCourse: {
    parameters: {
      path: {
        id: string
      }
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['ResourcesResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the schools for a course */
  getSchoolsForCourse: {
    parameters: {
      path: {
        id: string
      }
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['SchoolsResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the sections for a course */
  getSectionsForCourse: {
    parameters: {
      path: {
        id: string
      }
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['SectionsResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns a list of districts. In practice this will only return the one district associated with the bearer token */
  getDistricts: {
    parameters: {
      query: {
        count?: '' | 'true' | 'false' | 'undefined'
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['DistrictsResponse']
      }
    }
  }
  /** Returns a specific district */
  getDistrict: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['DistrictResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns a list of resources */
  getResources: {
    parameters: {
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['ResourcesResponse']
      }
    }
  }
  /** Returns a specific resource */
  getResource: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['ResourceResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the courses for a resource */
  getCoursesForResource: {
    parameters: {
      path: {
        id: string
      }
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['CoursesResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the sections for a resource */
  getSectionsForResource: {
    parameters: {
      path: {
        id: string
      }
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['SectionsResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the student and/or teacher users for a resource */
  getUsersForResource: {
    parameters: {
      path: {
        id: string
      }
      query: {
        role?: 'student' | 'teacher'
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['UsersResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns a list of schools */
  getSchools: {
    parameters: {
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
        count?: '' | 'true' | 'false' | 'undefined'
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['SchoolsResponse']
      }
    }
  }
  /** Returns a specific school */
  getSchool: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['SchoolResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the courses for a school */
  getCoursesForSchool: {
    parameters: {
      path: {
        id: string
      }
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['CoursesResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the district for a school */
  getDistrictForSchool: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['DistrictResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the sections for a school */
  getSectionsForSchool: {
    parameters: {
      path: {
        id: string
      }
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['SectionsResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the terms for a school */
  getTermsForSchool: {
    parameters: {
      path: {
        id: string
      }
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['TermsResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the staff, student, and/or teacher users for a school */
  getUsersForSchool: {
    parameters: {
      path: {
        id: string
      }
      query: {
        role?: 'staff' | 'student' | 'teacher'
        primary?: '' | 'true'
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['UsersResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns a list of sections */
  getSections: {
    parameters: {
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
        count?: '' | 'true' | 'false' | 'undefined'
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['SectionsResponse']
      }
    }
  }
  /** Returns a specific section */
  getSection: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['SectionResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the course for a section */
  getCourseForSection: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['CourseResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the district for a section */
  getDistrictForSection: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['DistrictResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the resources for a section */
  getResourcesForSection: {
    parameters: {
      path: {
        id: string
      }
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['ResourcesResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the school for a section */
  getSchoolForSection: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['SchoolResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the term for a section */
  getTermForSection: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['TermResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the student and/or teacher users for a section */
  getUsersForSection: {
    parameters: {
      path: {
        id: string
      }
      query: {
        role?: 'student' | 'teacher'
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['UsersResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns a list of terms */
  getTerms: {
    parameters: {
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
        count?: '' | 'true' | 'false' | 'undefined'
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['TermsResponse']
      }
    }
  }
  /** Returns a specific term */
  getTerm: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['TermResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the district for a term */
  getDistrictForTerm: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['DistrictResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the sections for a term */
  getSectionsForTerm: {
    parameters: {
      path: {
        id: string
      }
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['SectionsResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the schools for a term */
  getSchoolsForTerm: {
    parameters: {
      path: {
        id: string
      }
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['SchoolsResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns a list of contact, district admin, staff, student, and/or teacher users */
  getUsers: {
    parameters: {
      query: {
        limit?: number
        role?: 'contact' | 'district_admin' | 'staff' | 'student' | 'teacher'
        starting_after?: string
        ending_before?: string
        count?: '' | 'true' | 'false' | 'undefined'
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['UsersResponse']
      }
    }
  }
  /** Returns a specific user */
  getUser: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['UserResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the district for a user */
  getDistrictForUser: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['DistrictResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the contact users for a student user */
  getContactsForUser: {
    parameters: {
      path: {
        id: string
      }
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['UsersResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the student users for a teacher or contact user */
  getStudentsForUser: {
    parameters: {
      path: {
        id: string
      }
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['UsersResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the teacher users for a student user */
  getTeachersForUser: {
    parameters: {
      path: {
        id: string
      }
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['UsersResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the resources for a user */
  getResourcesForUser: {
    parameters: {
      path: {
        id: string
      }
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['ResourcesResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the schools for a user */
  getSchoolsForUser: {
    parameters: {
      path: {
        id: string
      }
      query: {
        primary?: '' | 'true'
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['SchoolsResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the sections for a user */
  getSectionsForUser: {
    parameters: {
      path: {
        id: string
      }
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['SectionsResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns a list of events */
  getEvents: {
    parameters: {
      query: {
        limit?: number
        starting_after?: string
        ending_before?: string
        school?: string
        record_type?: string[]
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['EventsResponse']
      }
      404: responses['NotFound']
    }
  }
  /** Returns the specific event */
  getEvent: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** OK Response */
      200: {
        schema: definitions['EventResponse']
      }
      404: responses['NotFound']
    }
  }
}

export interface external {}
