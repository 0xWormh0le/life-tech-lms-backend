/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/ims/oneroster/v1p1/academicSessions': {
    /** Return collection of all academic sessions. */
    get: {
      parameters: {
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return collection of all academic sessions. */
        200: {
          schema: {
            academicSessions?: definitions['academicSession'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/academicSessions/{id}': {
    /** Return specific Academic Session. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/academicSessions] */
          id: string
        }
      }
      responses: {
        /** Return specific Academic Session. */
        200: {
          schema: {
            academicSession?: definitions['academicSession']
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/classes': {
    /** Return collection of classes. */
    get: {
      parameters: {
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return collection of classes. */
        200: {
          schema: {
            classes?: definitions['class'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/classes/{id}/resources': {
    /** Return the collection of resources associated to this class. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/classes] */
          id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of resources associated to this class. */
        200: {
          schema: {
            resources?: definitions['resource'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/classes/{id}': {
    /** Return specific class. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/classes] */
          id: string
        }
      }
      responses: {
        /** Return specific class. */
        200: {
          schema: {
            class?: definitions['class']
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/classes/{id}/students': {
    /** Return the collection of students that are taking this class. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/classes] */
          id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of students that are taking this class. */
        200: {
          schema: {
            users?: definitions['user'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/classes/{id}/teachers': {
    /** Return the collection of teachers that are teaching this class. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/classes] */
          id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of teachers that are teaching this class. */
        200: {
          schema: {
            users?: definitions['user'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/courses': {
    /** Return collection of courses. */
    get: {
      parameters: {
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return collection of courses. */
        200: {
          schema: {
            courses?: definitions['course'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/courses/{id}/resources': {
    /** Return the collection of resources associated to this course. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/courses] */
          id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of resources associated to this course. */
        200: {
          schema: {
            resources?: definitions['resource'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/courses/{id}': {
    /** Return specific course. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/courses] */
          id: string
        }
      }
      responses: {
        /** Return specific course. */
        200: {
          schema: {
            course?: definitions['course']
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/courses/{id}/classes': {
    /** Return the collection of classes that are teaching this course. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/courses] */
          id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of classes that are teaching this course. */
        200: {
          schema: {
            classes?: definitions['class'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/demographics': {
    /** Return collection of demographics. */
    get: {
      parameters: {
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return collection of demographics. */
        200: {
          schema: {
            demographics?: definitions['demographic'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/demographics/{id}': {
    /** Return specific demographics. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/demographics] */
          id: string
        }
      }
      responses: {
        /** Return specific demographics. */
        200: {
          schema: {
            demographic?: definitions['demographic']
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/enrollments': {
    /** Return collection of all enrollments. */
    get: {
      parameters: {
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return collection of all enrollments. */
        200: {
          schema: {
            enrollments?: definitions['enrollment'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/enrollments/{id}': {
    /** Return specific enrollment. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/enrollments] */
          id: string
        }
      }
      responses: {
        /** Return specific enrollment. */
        200: {
          schema: {
            enrollment?: definitions['enrollment']
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/gradingPeriods': {
    /** Return collection of grading periods.  A Term is an instance of an AcademicSession. */
    get: {
      parameters: {
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return collection of grading periods.  A Term is an instance of an AcademicSession. */
        200: {
          schema: {
            academicSessions?: definitions['academicSession'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/gradingPeriods/{id}': {
    /** Return specific Grading Period.  A Grading Period is an instance of an AcademicSession. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/gradingPeriods] */
          id: string
        }
      }
      responses: {
        /** Return specific Grading Period.  A Grading Period is an instance of an AcademicSession. */
        200: {
          schema: {
            academicSession?: definitions['academicSession']
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/orgs': {
    /** Return collection of Orgs. */
    get: {
      parameters: {
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return collection of Orgs. */
        200: {
          schema: {
            orgs?: definitions['org'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/orgs/{id}': {
    /** Return Specific Org. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/orgs] */
          id: string
        }
      }
      responses: {
        /** Return Specific Org. */
        200: {
          schema: {
            org?: definitions['org']
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/resources': {
    /** Return collection of resources. */
    get: {
      parameters: {
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return collection of resources. */
        200: {
          schema: {
            resources?: definitions['resource'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/resources/{id}': {
    /** Return specific resource. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/resources] */
          id: string
        }
      }
      responses: {
        /** Return specific resource. */
        200: {
          schema: {
            resource?: definitions['resource']
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/schools': {
    /** Return collection of schools. A School is an instance of an Org. */
    get: {
      parameters: {
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return collection of schools. A School is an instance of an Org. */
        200: {
          schema: {
            orgs?: definitions['org'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/schools/{id}': {
    /** Return specific school.  A School is an instance of an Org. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/schools] */
          id: string
        }
      }
      responses: {
        /** Return specific school.  A School is an instance of an Org. */
        200: {
          schema: {
            org?: definitions['org']
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/schools/{id}/classes': {
    /** Return the collection of classes taught by this school. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/schools] */
          id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of classes taught by this school. */
        200: {
          schema: {
            classes?: definitions['class'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/schools/{school_id}/classes/{class_id}/enrollments': {
    /** Return the collection of all enrollments into this class. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/schools] */
          school_id: string
          /** An identifier from [learningdata/v1p1/schools/{id}/classes] */
          class_id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of all enrollments into this class. */
        200: {
          schema: {
            enrollments?: definitions['enrollment'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/schools/{school_id}/classes/{class_id}/students': {
    /** Return the collection of students taking this class in this school. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/schools] */
          school_id: string
          /** An identifier from [learningdata/v1p1/schools/{id}/classes] */
          class_id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of students taking this class in this school. */
        200: {
          schema: {
            users?: definitions['user'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/schools/{school_id}/classes/{class_id}/teachers': {
    /** Return the collection of teachers taking this class in this school. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/schools] */
          school_id: string
          /** An identifier from [learningdata/v1p1/schools/{id}/classes] */
          class_id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of teachers taking this class in this school. */
        200: {
          schema: {
            users?: definitions['user'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/schools/{id}/courses': {
    /** Return the collection of courses taught by this school. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/schools] */
          id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of courses taught by this school. */
        200: {
          schema: {
            courses?: definitions['course'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/schools/{id}/enrollments': {
    /** Return the collection of all enrollments for this school. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/schools] */
          id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of all enrollments for this school. */
        200: {
          schema: {
            enrollments?: definitions['enrollment'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/schools/{id}/students': {
    /** Return the collection of students attending this school. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/schools] */
          id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of students attending this school. */
        200: {
          schema: {
            users?: definitions['user'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/schools/{id}/teachers': {
    /** Return the collection of teachers teaching at this school. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/schools] */
          id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of teachers teaching at this school. */
        200: {
          schema: {
            users?: definitions['user'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/schools/{id}/terms': {
    /** Return the collection of terms that are used by this school. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/schools] */
          id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of terms that are used by this school. */
        200: {
          schema: {
            academicSessions?: definitions['academicSession'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/students': {
    /** Return collection of students.  A Student is an instance of a User. */
    get: {
      parameters: {
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return collection of students.  A Student is an instance of a User. */
        200: {
          schema: {
            users?: definitions['user'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/students/{id}': {
    /** Return specific student.  A Student is an instance of a User. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/students] */
          id: string
        }
      }
      responses: {
        /** Return specific student.  A Student is an instance of a User. */
        200: {
          schema: {
            user?: definitions['user']
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/students/{id}/classes': {
    /** Return the collection of classes that this student is taking. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/students] */
          id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of classes that this student is taking. */
        200: {
          schema: {
            classes?: definitions['class'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/teachers': {
    /** Return collection of teachers.  A Teacher is an instance of a User. */
    get: {
      parameters: {
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return collection of teachers.  A Teacher is an instance of a User. */
        200: {
          schema: {
            users?: definitions['user'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/teachers/{id}': {
    /** Return specific teacher. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/teachers] */
          id: string
        }
      }
      responses: {
        /** Return specific teacher. */
        200: {
          schema: {
            user?: definitions['user']
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/teachers/{id}/classes': {
    /** Return the collection of classes that this teacher is teaching. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/teachers] */
          id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of classes that this teacher is teaching. */
        200: {
          schema: {
            classes?: definitions['class'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/terms': {
    /** Return collection of terms.  A Term is an instance of an AcademicSession. */
    get: {
      parameters: {
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return collection of terms.  A Term is an instance of an AcademicSession. */
        200: {
          schema: {
            academicSessions?: definitions['academicSession'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/terms/{id}': {
    /** Return specific term. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/terms] */
          id: string
        }
      }
      responses: {
        /** Return specific term. */
        200: {
          schema: {
            academicSession?: definitions['academicSession']
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/terms/{id}/classes': {
    /** Return the collection of classes that are taught in this term. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/terms] */
          id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of classes that are taught in this term. */
        200: {
          schema: {
            classes?: definitions['class'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/terms/{id}/gradingPeriods': {
    /** Return the collection of Grading Periods that are part of this term. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/terms] */
          id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of Grading Periods that are part of this term. */
        200: {
          schema: {
            academicSessions?: definitions['academicSession'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/users': {
    /** Return collection of users */
    get: {
      parameters: {
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return collection of users */
        200: {
          schema: {
            users?: definitions['user'][]
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/users/{id}': {
    /** Return specific user */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/users] */
          id: string
        }
      }
      responses: {
        /** Return specific user */
        200: {
          schema: {
            user?: definitions['user']
          }
        }
      }
    }
  }
  '/ims/oneroster/v1p1/users/{id}/classes': {
    /** Return the collection of classes attended by this user. */
    get: {
      parameters: {
        path: {
          /** An identifier from [learningdata/v1p1/users] */
          id: string
        }
        query: {
          fields?: string
          filter?: string
          limit?: number
          offset?: number
          sort?: string
          orderBy?: 'asc' | 'desc'
        }
      }
      responses: {
        /** Return the collection of classes attended by this user. */
        200: {
          schema: {
            classes?: definitions['class'][]
          }
        }
      }
    }
  }
}

export interface definitions {
  baseClass: {
    /** @description 9877728989-ABF-0001 */
    sourcedId?: string
    /**
     * @description active
     * @enum {string}
     */
    status?: 'active' | 'tobedeleted'
    /**
     * Format: date-time
     * @description 2012-04-23T18:25:43.511Z
     */
    dateLastModified?: string
    /** @description â€œboardingâ€: â€œfalseâ€ */
    metadata?: { [key: string]: unknown }
  }
  org: {
    /** @description 9877728989-ABF-0001 */
    sourcedId?: string
    /**
     * @description active
     * @enum {string}
     */
    status?: 'active' | 'tobedeleted'
    /**
     * Format: date-time
     * @description 2012-04-23T18:25:43.511Z
     */
    dateLastModified?: string
    /** @description E.g. â€œclassificationâ€ : â€œpublicâ€ */
    metadata?: { [key: string]: unknown }
    /** @description IMS High */
    name?: string
    /**
     * @description See Subsection 4.13.4 for enumeration list.
     * @enum {string}
     */
    type?: 'department' | 'school' | 'district' | 'local' | 'state' | 'national'
    /** @description Human readable identifier for this org (e.g. NCES ID). */
    identifier?: string
    /** @description The link (sourcedId) to the parent Org. */
    parent?: { [key: string]: unknown }
    /** @description The links (sourcedIds) to the set of child Orgs. */
    children?: { [key: string]: unknown }
  }
  academicSession: {
    /** @description 9877728989-ABF-0001 */
    sourcedId?: string
    /**
     * @description active
     * @enum {string}
     */
    status?: 'active' | 'tobedeleted'
    /**
     * Format: date-time
     * @description 2012-04-23T18:25:43.511Z
     */
    dateLastModified?: string
    /** @description â€œcommentâ€ : â€œgrading period 1â€ */
    metadata?: { [key: string]: unknown }
    /** @description Spring Term */
    title?: string
    /**
     * Format: date
     * @description 40909
     */
    startDate?: string
    /**
     * Format: date
     * @description 41029
     */
    endDate?: string
    /**
     * @description See subsection 4.13.7 for the enumeration list.
     * @enum {string}
     */
    type?: 'gradingPeriod' | 'semester' | 'schoolYear' | 'term'
    /** @description (link to parent (if applicable)) */
    parent?: { [key: string]: unknown }
    /** @description (link to children (if applicable)) */
    children?: { [key: string]: unknown }
    /** @description The school year for the academic session.  This year should include the school year end.  E.g. 2014 or 2014-2015 */
    schoolYear?: string
  }
  enrollment: {
    /** @description 9877728989-ABF-0001 */
    sourcedId?: string
    /**
     * @description active
     * @enum {string}
     */
    status?: 'active' | 'tobedeleted'
    /**
     * Format: date-time
     * @description 2012-04-23T18:25:43.511Z
     */
    dateLastModified?: string
    metadata?: { [key: string]: unknown }
    /** @description Link to the enrolled User. */
    user?: { [key: string]: unknown }
    /** @description Link to the class on which the user is enrolled. */
    class?: { [key: string]: unknown }
    /** @description Link to the school at which the class is being provided. */
    school?: { [key: string]: unknown }
    /**
     * @description See subsection 4.13.6 for the enumeration list.
     * @enum {string}
     */
    role?:
      | 'administrator'
      | 'aide'
      | 'guardian'
      | 'invigilator'
      | 'parent'
      | 'proctor'
      | 'relative'
      | 'student'
      | 'teacher'
    /** @description Applicable only to teachers. Only one teacher should be designated as the primary teacher for a class. */
    primary?: boolean
    /**
     * Format: date
     * @description The start date for the enrollment (inclusive). This date must be within the period of the associated Academic Session. Example: 2012-04-23
     */
    beginDate?: string
    /**
     * Format: date
     * @description The end date for the enrollment (exclusive).  This date must be within the period of the associated Academic Session.  Example: 2013-03-31
     */
    endDate?: string
  }
  course: {
    /** @description 9877728989-ABF-0001 */
    sourcedId?: string
    /**
     * @description active
     * @enum {string}
     */
    status?: 'active' | 'tobedeleted'
    /**
     * Format: date-time
     * @description 2012-04-23T18:25:43.511Z
     */
    dateLastModified?: string
    metadata?: { [key: string]: unknown }
    /** @description Basic Chemistry */
    title?: string
    /** @description Link to academicSession, if applicable. */
    schoolYear?: { [key: string]: unknown }
    /** @description CHEM101 */
    courseCode?: string
    /**
     * @description Grade(s) for which the class is attended.  The value will be either a single entry or a comma separated list enclosed in double quotes (as per RFC 4180).  The permitted vocabulary is from CEDS (5th generation): https://ceds.ed.gov/.  Example: 09 or â€œ09,10,11â€
     * @enum {string}
     */
    grade?:
      | 'IT'
      | 'PR'
      | 'PK'
      | 'TK'
      | 'KG'
      | '01'
      | '02'
      | '03'
      | '04'
      | '05'
      | '06'
      | '07'
      | 8
      | 9
      | '10'
      | '11'
      | '12'
      | '13'
      | 'PS'
      | 'ABE'
      | 'ASE'
      | 'AdultESL'
      | 'UG'
      | 'Other'
    /** @description This is a human readable string.  Example: â€œchemistryâ€. */
    subjects?: string
    /** @description Link to org, if applicable. */
    org?: { [key: string]: unknown }
    /**
     * @description This is a machine readable set of codes and the number should match the associated â€˜subjectsâ€™ attribute. The vocabulary is from SCED (School Codes for the Exchange of Data): http://nces.ed.gov/forum/SCED.asp.
     * @enum {string}
     */
    subjectCodes?:
      | '01'
      | '02'
      | '03'
      | '04'
      | '05'
      | '06'
      | '07'
      | 8
      | 9
      | '10'
      | '11'
      | '12'
      | '13'
      | '14'
      | '15'
      | '16'
      | '17'
      | '18'
      | '19'
      | '20'
      | '21'
      | '22'
      | '23'
    /** @description Link to resources if applicable. */
    resources?: { [key: string]: unknown }
  }
  class: {
    /** @description 9877728989-ABF-0001 */
    sourcedId?: string
    /**
     * @description active
     * @enum {string}
     */
    status?: 'active' | 'tobedeleted'
    /**
     * Format: date-time
     * @description 2012-04-23T18:25:43.511Z
     */
    dateLastModified?: string
    /** @description â€œcommentâ€: â€œ9am to 11amâ€ */
    metadata?: { [key: string]: unknown }
    /** @description Basic Chemistry */
    title?: string
    /** @description Chem101-Mr Rogers */
    classCode?: string
    /**
     * @description See subsection 4.13.1 for the enumeration list.
     * @enum {string}
     */
    classType?: 'homeroom' | 'scheduled'
    /** @description 1 */
    location?: string
    /**
     * @description Grade(s) for which the class is attended.  The value will be either a single entry or a comma separated list enclosed in double quotes (as per RFC 4180).  The permitted vocabulary is from CEDS (5th generation): https://ceds.ed.gov/.  Example: 09 or â€œ09,10,11â€
     * @enum {string}
     */
    grade?:
      | 'IT'
      | 'PR'
      | 'PK'
      | 'TK'
      | 'KG'
      | '01'
      | '02'
      | '03'
      | '04'
      | '05'
      | '06'
      | '07'
      | 8
      | 9
      | '10'
      | '11'
      | '12'
      | '13'
      | 'PS'
      | 'ABE'
      | 'ASE'
      | 'AdultESL'
      | 'UG'
      | 'Other'
    grades?: (
      | 'IT'
      | 'PR'
      | 'PK'
      | 'TK'
      | 'KG'
      | '01'
      | '02'
      | '03'
      | '04'
      | '05'
      | '06'
      | '07'
      | 8
      | 9
      | '10'
      | '11'
      | '12'
      | '13'
      | 'PS'
      | 'ABE'
      | 'ASE'
      | 'AdultESL'
      | 'UG'
      | 'Other'
    )[]
    /** @description Subject name(s). If more than one subject is needed, use double quotes, and separate with commas (per RFC 4180).  Example: â€œchemistryâ€ */
    subjects?: string
    /** @description Link to course i.e. the Course â€˜sourcedIdâ€™. */
    course?: { [key: string]: unknown }
    /** @description Link to school i.e. the School â€˜sourcedIdâ€™. */
    school?: { [key: string]: unknown }
    /** @description Links to terms (academicSession) i.e. the set of Term â€˜sourcedIds. */
    terms?: { [key: string]: unknown }
    /**
     * @description This is a machine readable set of codes and the number should match the associated â€˜subjectsâ€™ attribute. The vocabulary is from SCED (School Codes for the Exchange of Data): http://nces.ed.gov/forum/SCED.asp.
     * @enum {string}
     */
    subjectCodes?:
      | '01'
      | '02'
      | '03'
      | '04'
      | '05'
      | '06'
      | '07'
      | 8
      | 9
      | '10'
      | '11'
      | '12'
      | '13'
      | '14'
      | '15'
      | '16'
      | '17'
      | '18'
      | '19'
      | '20'
      | '21'
      | '22'
      | '23'
    /** @description The time slots in the day that the class will be given.  If more than one period is needed, use double quotes, and separate with commas (per RFC 4180). Examples: 1; â€œ1,3,5â€ */
    periods?: string
    /** @description (Link to resources if applicable) */
    resources?: { [key: string]: unknown }
  }
  resource: {
    /** @description 9877728989-ABF-0001 */
    sourcedId?: string
    /**
     * @description active
     * @enum {string}
     */
    status?: 'active' | 'tobedeleted'
    /**
     * Format: date-time
     * @description 2012-04-23T18:25:43.511Z
     */
    dateLastModified?: string
    /** @description â€œcommentâ€: â€œ9am to 11amâ€ */
    metadata?: { [key: string]: unknown }
    /** @description Organic Chemistry */
    title?: string
    /**
     * @description See subsection 4.13.6 for the enumeration list.
     * @enum {string}
     */
    roles?:
      | 'administrator'
      | 'aide'
      | 'guardian'
      | 'invigilator'
      | 'parent'
      | 'proctor'
      | 'relative'
      | 'student'
      | 'teacher'
    /**
     * @description See subsection 4.13.3 for the enumeration list.
     * @enum {string}
     */
    importance?: 'primary' | 'secondary'
    /** @description Unique identifier for the resource allocated by the vendor. */
    vendorResourceId?: string
    /** @description Identifier for the vendor who created the resource.  This will be assigned by IMS as part of Basic Certification. */
    vendorId?: string
    /** @description Identifier for the application associated with the resource. */
    applicationId?: string
  }
  user: {
    /** @description 9877728989-ABF-0001 */
    sourcedId?: string
    /**
     * @description active
     * @enum {string}
     */
    status?: 'active' | 'tobedeleted'
    /**
     * Format: date-time
     * @description 2012-04-23T18:25:43.511Z
     */
    dateLastModified?: string
    metadata?: { [key: string]: unknown }
    /** @description pjn@imsglobal.org */
    username?: string
    /** @description This is an external user id that should be used for this user, if for some reason the sourcedId cannot be used. This might be an active directory id, an LTI id, or some other machine readable identifier that is used for this person. */
    userId?: string
    /** @description 9877728989-ABF-0001 */
    identifier?: string
    /** @description Phil */
    givenName?: string
    /** @description Nicholls */
    familyName?: string
    /** @description If more than one middle name is needed separate using a space ngarde Granvill */
    middleName?: string
    /**
     * @description See subsection 4.13.6 for the enumeration list.
     * @enum {string}
     */
    role?:
      | 'administrator'
      | 'aide'
      | 'guardian'
      | 'invigilator'
      | 'parent'
      | 'proctor'
      | 'relative'
      | 'student'
      | 'teacher'
    /** @description pjn@imsglobal.org */
    email?: string
    /** @description +44 07759 555 922 */
    sms?: string
    /** @description +44 07759 555 922 */
    phone?: string
    /** @description Links to other people. */
    agents?: { [key: string]: unknown }
    /** @description Links to orgs.  In most cases, this is a single link to a school, but could be to a district or national org. People might also be linked to multiple organizations. */
    orgs?: Record<string, string>[]
    /** @description Link to demographics. */
    demographics?: { [key: string]: unknown }
    /**
     * @description Grade(s) for which the class is attended.  The value will be either a single entry or a comma separated list enclosed in double quotes (as per RFC 4180).  The permitted vocabulary is from CEDS (5th generation): https://ceds.ed.gov/.
     * @enum {string}
     */
    grade?:
      | 'IT'
      | 'PR'
      | 'PK'
      | 'TK'
      | 'KG'
      | '01'
      | '02'
      | '03'
      | '04'
      | '05'
      | '06'
      | '07'
      | 8
      | 9
      | '10'
      | '11'
      | '12'
      | '13'
      | 'PS'
      | 'ABE'
      | 'ASE'
      | 'AdultESL'
      | 'UG'
      | 'Other'
    /** @description Xwyz//123 */
    password?: string
  }
  demographic: {
    /** @description 9877728989-ABF-0001 */
    sourcedId?: string
    /**
     * @description active
     * @enum {string}
     */
    status?: 'active' | 'tobedeleted'
    /**
     * Format: date-time
     * @description 2012-04-23T18:25:43.511Z
     */
    dateLastModified?: string
    /**
     * Format: date
     * @description Date
     */
    birthDate?: string
    /**
     * @description See subsection 4.13.2 for the enumeration list.
     * @enum {string}
     */
    sex?: 'Male' | 'Female'
    /** @description Boolean */
    americanIndianOrAlaskaNative?: boolean
    /** @description Boolean */
    asian?: boolean
    /** @description Boolean */
    blackOrAfricanAmerican?: boolean
    /** @description Boolean */
    nativeHawaiianOrOtherPacificIslander?: boolean
    /** @description Boolean */
    white?: boolean
    /** @description Boolean */
    demographicRaceTwoOrMoreRaces?: boolean
    /** @description Boolean */
    hispanicOrLatinoEthnicity?: boolean
    /**
     * @description Vocabulary â€“ https://ceds.ed.gov/CEDSElementDetails.aspx?TermxTopicId=20002
     * @enum {string}
     */
    countryOfBirthCode?:
      | 'AF'
      | 'AX'
      | 'AL'
      | 'DZ'
      | 'AS'
      | 'AD'
      | 'AO'
      | 'AI'
      | 'AQ'
      | 'AG'
      | 'AR'
      | 'AM'
      | 'AW'
      | 'AU'
      | 'AT'
      | 'AZ'
      | 'BS'
      | 'BH'
      | 'BD'
      | 'BB'
      | 'BY'
      | 'BE'
      | 'BZ'
      | 'BJ'
      | 'BM'
      | 'BT'
      | 'BO'
      | 'BQ'
      | 'BA'
      | 'BW'
      | 'BV'
      | 'BR'
      | 'IO'
      | 'BN'
      | 'BG'
      | 'BF'
      | 'BI'
      | 'KH'
      | 'CM'
      | 'CA'
      | 'CV'
      | 'KY'
      | 'CF'
      | 'TD'
      | 'CL'
      | 'CN'
      | 'CX'
      | 'CC'
      | 'CO'
      | 'KM'
      | 'CG'
      | 'CD'
      | 'CK'
      | 'CR'
      | 'CI'
      | 'HR'
      | 'CU'
      | 'CW'
      | 'CY'
      | 'CZ'
      | 'DK'
      | 'DJ'
      | 'DM'
      | 'DO'
      | 'EC'
      | 'EG'
      | 'SV'
      | 'GQ'
      | 'ER'
      | 'EE'
      | 'ET'
      | 'FK'
      | 'FO'
      | 'FJ'
      | 'FI'
      | 'FR'
      | 'GF'
      | 'PF'
      | 'TF'
      | 'GA'
      | 'GM'
      | 'GE'
      | 'DE'
      | 'GH'
      | 'GI'
      | 'GR'
      | 'GL'
      | 'GD'
      | 'GP'
      | 'GU'
      | 'GT'
      | 'GG'
      | 'GN'
      | 'GW'
      | 'GY'
      | 'HT'
      | 'HM'
      | 'VA'
      | 'HN'
      | 'HK'
      | 'HU'
      | 'IS'
      | 'IN'
      | 'ID'
      | 'IR'
      | 'IQ'
      | 'IE'
      | 'IM'
      | 'IL'
      | 'IT'
      | 'JM'
      | 'JP'
      | 'JE'
      | 'JO'
      | 'KZ'
      | 'KE'
      | 'KI'
      | 'KP'
      | 'KR'
      | 'KW'
      | 'KG'
      | 'LA'
      | 'LV'
      | 'LB'
      | 'LS'
      | 'LR'
      | 'LY'
      | 'LI'
      | 'LT'
      | 'LU'
      | 'MO'
      | 'MK'
      | 'MG'
      | 'MW'
      | 'MY'
      | 'MV'
      | 'ML'
      | 'MT'
      | 'MH'
      | 'MQ'
      | 'MR'
      | 'MU'
      | 'YT'
      | 'MX'
      | 'FM'
      | 'MD'
      | 'MC'
      | 'MN'
      | 'ME'
      | 'MS'
      | 'MA'
      | 'MZ'
      | 'MM'
      | 'NA'
      | 'NR'
      | 'NP'
      | 'NL'
      | 'NC'
      | 'NZ'
      | 'NI'
      | 'NE'
      | 'NG'
      | 'NU'
      | 'NF'
      | 'MP'
      | 'NO'
      | 'OM'
      | 'PK'
      | 'PW'
      | 'PS'
      | 'PA'
      | 'PG'
      | 'PY'
      | 'PE'
      | 'PH'
      | 'PN'
      | 'PL'
      | 'PT'
      | 'PR'
      | 'QA'
      | 'RE'
      | 'RO'
      | 'RU'
      | 'RW'
      | 'BL'
      | 'SH'
      | 'KN'
      | 'LC'
      | 'MF'
      | 'PM'
      | 'VC'
      | 'WS'
      | 'SM'
      | 'ST'
      | 'SA'
      | 'SN'
      | 'RS'
      | 'SC'
      | 'SL'
      | 'SG'
      | 'SX'
      | 'SK'
      | 'SI'
      | 'SB'
      | 'SO'
      | 'ZA'
      | 'GS'
      | 'SS'
      | 'ES'
      | 'LK'
      | 'SD'
      | 'SR'
      | 'SJ'
      | 'SZ'
      | 'SE'
      | 'CH'
      | 'SY'
      | 'TW'
      | 'TJ'
      | 'TZ'
      | 'TH'
      | 'TL'
      | 'TG'
      | 'TK'
      | 'TO'
      | 'TT'
      | 'TN'
      | 'TR'
      | 'TM'
      | 'TC'
      | 'TV'
      | 'UG'
      | 'UA'
      | 'AE'
      | 'GB'
      | 'US'
      | 'UM'
      | 'UY'
      | 'UZ'
      | 'VU'
      | 'VE'
      | 'VN'
      | 'VG'
      | 'VI'
      | 'WF'
      | 'EH'
      | 'YE'
      | 'ZM'
      | 'ZW'
    /**
     * @description Vocabulary â€“ https://ceds.ed.gov/CEDSElementDetails.aspx?TermxTopicId=20837
     * @enum {string}
     */
    stateOfBirthAbbreviation?:
      | 'AK'
      | 'AL'
      | 'AR'
      | 'AS'
      | 'AZ'
      | 'CA'
      | 'CO'
      | 'CT'
      | 'DC'
      | 'DE'
      | 'FL'
      | 'FM'
      | 'GA'
      | 'GU'
      | 'HI'
      | 'IA'
      | 'ID'
      | 'IL'
      | 'IN'
      | 'KS'
      | 'KY'
      | 'LA'
      | 'MA'
      | 'MD'
      | 'ME'
      | 'MH'
      | 'MI'
      | 'MN'
      | 'MO'
      | 'MP'
      | 'MS'
      | 'MT'
      | 'NC'
      | 'ND'
      | 'NE'
      | 'NH'
      | 'NJ'
      | 'NM'
      | 'NV'
      | 'NY'
      | 'OH'
      | 'OK'
      | 'OR'
      | 'PA'
      | 'PR'
      | 'PW'
      | 'RI'
      | 'SC'
      | 'SD'
      | 'TN'
      | 'TX'
      | 'UT'
      | 'VA'
      | 'VI'
      | 'VT'
      | 'WA'
      | 'WI'
      | 'WV'
      | 'WY'
    /** @description String */
    cityOfBirth?: string
    /**
     * @description Vocabulary - https://ceds.ed.gov/CEDSElementDetails.aspx?TermxTopicId=20863
     * @enum {string}
     */
    publicSchoolResidenceStatus?:
      | '01652'
      | '01653'
      | '01654'
      | '01655'
      | '01656'
  }
  category: {
    /** @description 9877728989-ABF-0001 */
    sourcedId?: string
    /**
     * @description active
     * @enum {string}
     */
    status?: 'active' | 'tobedeleted'
    /**
     * Format: date-time
     * @description 2012-04-23T18:25:43.511Z
     */
    dateLastModified?: string
    metadata?: { [key: string]: unknown }
    /** @description Homework */
    title?: string
  }
  lineItem: {
    /** @description This is sourcedId of the associated User. Example: 9877728989-ABF-0001 */
    sourcedId?: string
    /**
     * @description active
     * @enum {string}
     */
    status?: 'active' | 'tobedeleted'
    /**
     * Format: date-time
     * @description 2012-04-23T18:25:43.511Z
     */
    dateLastModified?: string
    metadata?: { [key: string]: unknown }
    /** @description Maths Test 1 */
    title?: string
    /** @description Simple addition test */
    description?: string
    /**
     * Format: date
     * @description 2012-01-01T18:25:43.511Z
     */
    assignDate?: string
    /**
     * Format: date
     * @description 2012-01-05T18:25:43.511Z
     */
    dueDate?: string
    /** @description <link to class> */
    class?: { [key: string]: unknown }
    /** @description <link to category> */
    category?: { [key: string]: unknown }
    /** @description <link to grading period> */
    gradingPeriod?: { [key: string]: unknown }
    /** @description â€œminâ€ : â€œ0.0â€, â€œmaxâ€ : â€œ100.0â€ */
    resultValue?: string
  }
  result: {
    /** @description 9877728989-ABF-0001 */
    sourcedId?: string
    /**
     * @description active
     * @enum {string}
     */
    status?: 'active' | 'tobedeleted'
    /**
     * Format: date-time
     * @description 2012-04-23T18:25:43.511Z
     */
    dateLastModified?: string
    metadata?: { [key: string]: unknown }
    /** @description <link to line item> */
    lineItem?: { [key: string]: unknown }
    /** @description <link to student> */
    student?: { [key: string]: unknown }
    /**
     * @description See subsection 4.13.5 for the enumeration list.
     * @enum {string}
     */
    resultStatus?:
      | 'exempt'
      | 'fully graded'
      | 'not submitted'
      | 'partially graded'
      | 'submitted'
    /**
     * Format: float
     * @description 67
     */
    score?: number
    /**
     * Format: date
     * @description 2012-01-05T18:25:43.511Z
     */
    date?: string
    /** @description 1 */
    comment?: string
  }
}

export interface operations {}

export interface external {}
