{
  "name": "codex_usa_backend",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "build": "tsc --incremental & wait-on ./build/src/adapter/entry-points/local/index.js && npm run copy:generated-swagger-yaml && npm run copy:graphql-schema",
    "rebuild:module": "rimraf ./node_modules/bcrypt && npm i",
    "preserve": "npm run doctor && npm run rebuild:module",
    "serve:dev": "ts-node src/adapter/entry-points/local/index.ts",
    "serve": "npm run build && nodemon -x 'node --max-http-header-size=262144' --watch ./build ./build/src/adapter/entry-points/local/index.js",
    "serve:clean": "rimraf ./build && npm run serve",
    "serve:non-watch": "rimraf ./build && npm run build && node --max-http-header-size=262144 ./build/src/adapter/entry-points/local/index.js",
    "doctor:node-version": "check-node-version --node 14 --npx 6 --npm 6",
    "doctor": "npm run doctor:node-version",
    "prestart": "npm run doctor && npm run rebuild:module",
    "start": "docker run --name codex-backend-local-server --detach --rm -p 3000:3000 -v $(pwd):/app -w /app -u $(id -u):$(id -g) -it node:14.19-bullseye npm run serve",
    "stop": "docker stop codex-backend-local-server",
    "gen:api": "ts-node ./scripts/generate-api.ts -n codex-usa-backend && npm run gen:codexapie2e",
    "gen:cleverapi": "openapi-typescript swagger/clever-api-v3.0.0.yaml --output src/adapter/_gen/clever-api-schema.ts",
    "gen:classlinkapi": "openapi-typescript swagger/classlink-api-v1p1.yaml --output src/adapter/_gen/classlink-api-schema.ts",
    "gen:codexapie2e": "openapi-typescript src/adapter/entry-points/_gen/codex-usa-backend-server/api/openapi.yaml --output test/api-e2e/_gen/codex-api-schema.ts",
    "gen:codexv2:types-graphql:server": "graphql-codegen -c ./src/adapter/entry-points/express/handlers/codex-v2/graphql-typesciprt-codegen.ts",
    "gen:codexv2:types-graphql:client": "mkdir -p clients/codex-v2 && npm run gen:codexv2:types-graphql:server && cp ./src/adapter/entry-points/express/handlers/codex-v2/schema.graphql src/adapter/entry-points/express/handlers/codex-v2/_gen/resolvers-type.ts clients/codex-v2/",
    "gen:codexv2:types-graphql": "npm run gen:codexv2:types-graphql:server && npm run gen:codexv2:types-graphql:client",
    "gen:codexv2": "npm run gen:codexv2:types-graphql",
    "copy:generated-swagger-yaml": "cpx ./src/adapter/entry-points/_gen/codex-usa-backend-server/api/openapi.yaml ./build/src/adapter/entry-points/_gen/codex-usa-backend-server/api",
    "copy:graphql-schema": "cpx ./src/adapter/entry-points/express/handlers/codex-v2/schema.graphql ./build/src/adapter/entry-points/express/handlers/codex-v2",
    "lint:eslint": "eslint '**/*.{ts,js}'",
    "lint:check-wrong-text": "./scripts/check-wrong-text.sh",
    "lint": "npm run lint:eslint && npm run lint:check-wrong-text",
    "preformat": "sudo chmod -R a+rwx ./env/**/pgdata || exit 0",
    "format:prettier": "prettier --write '**/*'",
    "format:replace-wrong-text": "./scripts/replace-wrong-text.sh",
    "format": "npm run format:prettier && npm run format:replace-wrong-text && npm run lint:eslint -- --fix",
    "test": "npm run test:domain",
    "_test": "npm run rebuild:module && tsc --incremental --noEmit && jest --config ./jest.config.js",
    "_test:serially": "npm run rebuild:module && tsc --incremental --noEmit && jest --config ./jest.config.js --runInBand",
    "test:domain": "npm run _test .src/domain \"./src/.*/domain\"",
    "_test:adapter": "rimraf ./env/adapter-unit-test/pgdata && npm run stop:adapter && npm run start:adapter && wait-on tcp:25432 && npm run _test:serially",
    "test:adapter": "npm run _test:adapter .src/adapter \"./src/.*/adapter\"",
    "_test:e2e": "rimraf ./env/api-e2e-test/pgdata && npm run stop:e2e && npm run start:e2e && wait-on http://localhost:13000/ && npm run _test:serially",
    "test:e2e": "npm run _test:e2e ./test/api-e2e",
    "test:maintenance:e2e": "npm run _test:e2e ./test/api-e2e/scenarios/maintenance",
    "test:codexv2:e2e": "npm run _test:e2e ./test/api-e2e/scenarios/codex-v2",
    "test:codexv2:adapter:repositories": "npm run _test:adapter ./src/adapter/repositories/codex-v2",
    "test:codexv2:usecase": "jest ./src/domain/usecases/codex-v2",
    "start:db": "docker-compose -f ./env/local-db/docker-compose.yaml up -d",
    "stop:db": "docker-compose -f ./env/local-db/docker-compose.yaml down",
    "start:swagger": "npm run gen:api && docker-compose -f ./swagger/docker-compose.yaml up -d",
    "stop:swagger": "docker-compose -f ./swagger/docker-compose.yaml down",
    "start:adapter": "UID=$(id -u) GID=$(id -g) CODEX_USA_BACKEND_PATH=$(pwd) docker-compose -f ./env/adapter-unit-test/docker-compose.yaml up -d",
    "stop:adapter": "docker-compose -f ./env/adapter-unit-test/docker-compose.yaml down",
    "start:e2e": "UID=$(id -u) GID=$(id -g) CODEX_USA_BACKEND_PATH=$(pwd) docker-compose -f ./env/api-e2e-test/docker-compose.yaml up -d",
    "stop:e2e": "CODEX_USA_BACKEND_PATH=$(pwd) docker-compose -f ./env/api-e2e-test/docker-compose.yaml down",
    "typeorm:generate:migration": "npx rollup -c src/adapter/typeorm/rollupconfig.js && npx typeorm migration:generate -o -d src/adapter/typeorm/dist/dev-data-source.js",
    "typeorm:create:migration": "npx rollup -c src/adapter/typeorm/rollupconfig.js && npx typeorm migration:create -o",
    "db:insert-dummy-user": "ts-node ./scripts/insert-dummy-user.ts"
  },
  "devDependencies": {
    "@apidevtools/json-schema-ref-parser": "9.0.9",
    "@apidevtools/swagger-parser": "10.0.3",
    "@babel/core": "^7.17.10",
    "@babel/preset-env": "^7.17.10",
    "@faker-js/faker": "^7.6.0",
    "@graphql-codegen/cli": "^2.13.7",
    "@graphql-codegen/typescript": "^2.7.5",
    "@graphql-codegen/typescript-resolvers": "^2.7.5",
    "@openapitools/openapi-generator-cli": "^2.4.26",
    "@rollup/plugin-babel": "^5.3.1",
    "@rollup/plugin-typescript": "^8.3.2",
    "@tsconfig/node14": "^1.0.1",
    "@types/aws-lambda": "^8.10.70",
    "@types/bcrypt": "^5.0.0",
    "@types/command-line-args": "^5.2.0",
    "@types/command-line-usage": "^5.0.2",
    "@types/cors": "^2.8.12",
    "@types/crypto-js": "^4.1.1",
    "@types/data-api-client": "^1.2.3",
    "@types/express": "^4.17.13",
    "@types/express-openapi": "^1.9.0",
    "@types/jest": "^27.4.1",
    "@types/jest-expect-message": "^1.0.4",
    "@types/js-yaml": "^4.0.5",
    "@types/node": "<15.0.0",
    "@types/pg": "^8.6.5",
    "@types/rimraf": "^3.0.2",
    "@types/uuid": "^8.3.4",
    "@typescript-eslint/eslint-plugin": "^5.40.1",
    "@typescript-eslint/parser": "^5.40.1",
    "axios": "^0.26.1",
    "check-node-version": "^4.2.1",
    "command-line-args": "^5.2.1",
    "command-line-usage": "^6.1.1",
    "cpx": "^1.5.0",
    "dtsgenerator": "^3.15.1",
    "eslint": "^8.5.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jest-formatting": "^3.1.0",
    "eslint-plugin-no-type-assertion": "^1.3.0",
    "jest": "^27.5.1",
    "jest-expect-message": "^1.1.2",
    "jest-extended": "^3.2.3",
    "js-yaml": "^3.14.1",
    "nodemon": "^2.0.15",
    "openapi-typescript": "^5.4.0",
    "prettier": "^2.5.1",
    "rimraf": "^3.0.2",
    "rollup": "^2.73.0",
    "ts-jest": "^27.1.3",
    "ts-node": "^10.7.0",
    "typescript": "^4.9.4",
    "wait-on": "^6.0.1"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.241.0",
    "@aws-sdk/client-sesv2": "^3.100.0",
    "@vendia/serverless-express": "^4.8.0",
    "aws-sdk": "^2.1145.0",
    "aws-sdk-client-mock": "^0.6.2",
    "bcrypt": "^5.1.0",
    "body-parser": "^1.20.0",
    "camelcase": "^5.3.1",
    "cookie-parser": "^1.4.4",
    "cors": "^2.8.5",
    "crypto-js": "^4.1.1",
    "data-api-client": "^1.2.0",
    "dayjs": "^1.11.2",
    "dotenv": "^16.0.0",
    "express": "^4.17.3",
    "express-bearer-token": "^2.4.0",
    "express-graphql": "^0.12.0",
    "express-openapi": "^10.1.0",
    "express-openapi-validator": "^3.9.1",
    "google-auth-library": "^8.1.1",
    "graphql": "^15.3.0",
    "graphql-tools": "^8.3.11",
    "morgan-body": "^2.6.8",
    "ono": "^5.0.1",
    "openapi-sampler": "^1.0.0-beta.15",
    "pg": "^8.4.0",
    "reflect-metadata": "^0.1.13",
    "swagger-ui-express": "^4.3.0",
    "type-fest": "^2.15.1",
    "typeorm": "0.3.6",
    "ulid": "^2.3.0",
    "uuid": "^8.3.2",
    "winston": "^3.2.1"
  }
}
